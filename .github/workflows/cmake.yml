name: CMake

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ master, dev ]

env:
  BUILD_TYPE: Release
  TESTS_TO_SKIP: system/*|graphics/font|graphics/renderer

jobs:
  unit_tests:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}
           
    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 10

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure -j 10 -E "${{env.TESTS_TO_SKIP}}"

  unit_tests_linux:
    runs-on: [ ubuntu-latest ]
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Update apt-get
      run: sudo gem install apt-spy2 &&
           sudo apt-spy2 check &&
           sudo apt-spy2 fix --commit &&
           sudo apt-get update
        
    - name: Install X11 and OpenGL
      run: sudo apt-get install -y libx11-dev libgl1-mesa-dev mesa-common-dev
  
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 10

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure -j 10 -E "${{env.TESTS_TO_SKIP}}"

    - name: Run clang-tidy
      run: python ${{github.workspace}}/tools/clang_tidy.py

  clang_tidy:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Run clang-tidy
      run: python ${{github.workspace}}/tools/clang_tidy.py
         